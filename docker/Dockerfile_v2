FROM python:3.8-slim AS compile-image

RUN apt-get update && apt install -y \
    # General requirements:
    libpq-dev \
    python3-dev \
    python3-pip

# Set working directory
WORKDIR /4cat

# Make and use virtual environment
RUN python3 -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Install dependencies
RUN pip3 install --upgrade pip
COPY ./requirements.txt /4cat/requirements.txt
COPY ./setup.py /4cat/setup.py
COPY ./VERSION /4cat/VERSION
COPY ./README.md /4cat/README.md
RUN mkdir /4cat/backend
RUN mkdir /4cat/webtool
RUN mkdir /4cat/datasources
RUN pip3 install -r requirements.txt

# Install frontend Docker requirements
RUN pip3 install gunicorn

# Build image from compile-image
FROM python:3.8-slim AS build-image
COPY --from=compile-image /opt/venv /opt/venv
# Make virtual env available
ENV PATH="/opt/venv/bin:$PATH" POSTGRES_HOST_AUTH_METHOD=trust

# Postgres; until I can figure out how to build from two images and what exactly to bring from the postgres one...
#RUN apt-get update && apt-get install -y lsb-release wget gnupg && echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list && wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add -

RUN apt-get update && apt-get install -y \
    # Called in docker-entrypoint.sh:
    curl \
    sudo \
    netcat \
    postgresql \
    postgresql-client \
    postgresql-server-dev-all \
    # Called by 4CAT:
    git \
    # Needed for video processing only (and only technically on backend)
    ffmpeg

# Set working directory
WORKDIR /4cat

# Copy project
COPY . /4cat/

# Permission
RUN chmod +x docker/wait-for-backend.sh docker/docker-entrypoint.sh

# Create Volumes
VOLUME /4cat/data/ /4cat/config/ /4cat/logs/ /var/lib/postgresql/data/

# Expose ports (gunicorn 80, 4CAT api 4444, telegram 443)
EXPOSE 80 4444 443

# Environment variables
# Database setup
ENV PYTHONUNBUFFERED=1 \
 POSTGRES_USER=fourcat \
 POSTGRES_PASSWORD=supers3cr3t \
 POSTGRES_DB=fourcat \
 POSTGRES_HOST=localhost \
 POSTGRES_HOST_AUTH_METHOD=trust \
 # Server information
 SERVER_NAME=localhost \
 PUBLIC_PORT=80 \
 API_HOST=localhost \
 PUBLIC_API_PORT=4444 \
 # Telegram apparently needs its own port
 TELEGRAM_PORT=443

ENTRYPOINT docker/docker-entrypoint_v2.sh
